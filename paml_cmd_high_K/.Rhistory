help(table)
help(is.na)
help(table,is.na)
help(table&is.na)
test_1 <- {1,2,3}
test_1 <- [1,2,3,4]
test_1 <- (1,2,3,4)
table(gender=="female"&ageclass)
table(ageclass[gender=="female"])
library(readr)
practicedata <- read_csv("C:/Users/aqual/Downloads/practicedata.csv")
View(practicedata)
attach(practicedata)
table(quality)
prop.table(quality)
prop.table(table(quality)
prop.table(table(quality))
prop.table(table(quality))
qualityTable<-table(quality)
prop.table(qualityTable)
median(time1)
labdata2 <- read.csv("C:/Users/aqual/Google Drive/School/Year 2/Semester 2/STATS 2244B/Lab Assignment 2/labdata2.csv", header=FALSE)
View(labdata2)
attach(labdata2)
help(c)
help(y)
yeet <- c("strongly disagree","moderately disagree","moderately agree","strongly agree")
yeetma <- c(1,2,3,4)
match(yeet,yeetma)
help(match)
"strongly disagree" <- 1
kek <- yeet
yeet
iris %>%
import dplyr
install.packages("dplyr")
summarize(n=n(), mean=mean(Sepal.Length)
library(dplyr)
iris %>%
group_by(Species) %>%
summarize(n=n(), mean=mean(Sepal.Length)
library(dplyr)
iris %>% group_by(Species) %>% summarize(n=n(), mean=mean(Sepal.Length)
iris
library(dplyr)
iris %>% filter("versicolor") %>% summarize(n=n(), mean=mean(Sepal.Length)
library(dplyr)
versicolor <- iris %>% filter("versicolor")
versicolor_length <- versicolor %>% summarize(n=n(), mean=mean(Sepal.Length)
library(dplyr)
print(iris %>% filter("versicolor") %>% summarize(n=n(), mean=mean(Sepal.Length))
filter(iris, Species == "versicolor")
library(dplyr)
iris %>% filter(Species == "versicolor") %>% summarise(mean_length = mean(Petal.Width))
library(dplyr)
iris %>% filter(Species == "versicolor") %>% summarise(mean_width = mean(Petal.Width))
head(iris)
iris(6,1)
iris[1:6,]
iris[1:6,1]
?length
help(length)
library(dplyr)
iris %>% group_by(Species) %>% summarise()
library(dplyr)
iris %>% summarise() %>% group_by(Species)
iris %>% summarise() %>% group_by()
iris %>% group_by(Species)
library(dplyr)
iris %>% group_by(Species) %>% summarise()
install.packages("TreeTools")
install.packages("ape")
dirname(rstudioapi::getActiveDocumentContext()$path)
install.packages("rstudioapi")
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(parent.frame(2)$ofile)
dirname(rstudioapi::getActiveDocumentContext()$path)
tree <- ape::read.tree(radseq_pruned.tre)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
tree <- ape::read.tree(radseq_pruned.tre)
tree <- ape::read.tree("radseq_pruned.tre")
source('C:/Users/aqual/OneDrive - University of Toronto/Viburnum rubisco/paml/unroot_tree.R', echo=TRUE)
plot(ape::unroot(tree))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
tree <- ape::read.tree("radseq_pruned.tre")
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
getwd()
install.packages("here")
setwd(here::here())
tree <- ape::read.tree("radseq_pruned.tre")
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
?write.tree
?ape
setwd(here::here())
print("Reading tree.")
tree <- ape::read.tree("radseq_pruned.tre")
print("Writing unrooted tree.")
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
tree
tree$edge.length
tree$edge.length = ""
tree
tree$edge.length
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
tree$edge.length = NA
tree
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
tree$edge.length = FALSE
tree$edge.length
tree
del tree$edge.length
tree$edge.length <- NULL
tree
setwd(here::here())
print("Reading tree.")
tree <- ape::read.tree("radseq_pruned.tre")
print("Writing unrooted tree.")
tree$edge.length <- NULL
print("Removing branch lengths for PAML.")
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
setwd(here::here())
print("Reading tree.")
tree <- ape::read.tree("radseq_pruned.tre")
print("Writing unrooted tree.")
tree$edge.length <- NULL
print("Removing branch lengths for PAML.")
ape::write.tree(ape::unroot(tree), file = "radseq_pruned_unrooted.tre")
