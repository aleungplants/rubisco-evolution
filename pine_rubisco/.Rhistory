# geom_smooth(formula = y ~ x,
#             method = "lm",
#             color = "black",
#             linewidth = 0.5) +
geom_point(shape = 21,
size = 0.5) +
annotate("text",
label = "B", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("rr", "p.value")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = "top",
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("eq")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = 0.87,
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
scale_x_continuous(limits = c(-20, 20), breaks = seq(-20, 20, 10)) +
scale_y_continuous(limits = c(-5, 7.5), breaks = seq(-5, 7.5, 2.5)) +
# scale_y_continuous(limits = c(-50, 50), breaks = seq(-50, 50, 25)) +
labs(x = "Growing season temp. contrasts",
y = bquote(Delta*Delta*italic("G")~"contrasts")) +
# y = bquote(Delta*italic("G")["fold"]~"contrasts")) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
cowplot::panel_border(color = "black", size = 1)
plot_pic
# ggsave(here::here("figure_temp_stability_pic.svg"), plot_pic, height = 2.75, width = 3, dpi = 1000)
ggsave(here::here("figure_temp_stability.svg"),
cowplot::plot_grid(plot, NULL, plot_pic,
rel_widths = c(1, -0.1, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 5.5,
bg = "white", dpi = 1000)
ggsave(here::here("figure_temp_stability.png"),
cowplot::plot_grid(plot, NULL, plot_pic,
rel_widths = c(1, -0.1, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 5.5,
bg = "white", dpi = 1000)
library(ape)
library(here)
# the divergence time of dryopteris from seed plants is 405 MYA; pinus from magnoliopsida is 330 MYA; limonium from viburnum is 116 MYA. crown ages of Dryopteris, Limonium, and Pinus of 23, 22, and 82 Ma; viburnum crown age is 68 ma
# 1. Import the trees
tree_dryopteris <- ape::read.tree(here::here("dryopteris_rubisco", "dryopteris_csubst.tre"))
tree_pinus <- ape::read.tree(here::here("pine_rubisco", "Pinus_time_csubst.tre"))
tree_limonium <- ape::read.tree(here::here("limonium_rubisco", "koutroumpa_tree_csubst.tre"))
tree_viburnum <- ape::read.tree(here::here("csubst", "radseq_pruned_csubst.tre"))
# 2. Backbone Tree (representing genera)
age_dryopteris <- node.depth.edgelength(tree_dryopteris) %>% max
age_pinus <- node.depth.edgelength(tree_pinus) %>% max
age_limonium <- node.depth.edgelength(tree_limonium) %>% max
age_viburnum <- node.depth.edgelength(tree_viburnum) %>% max
backbone_newick <- "((Dryopteris:405, (Pinus:330, (Limonium:116, Viburnum:116):214):75):330);"
backbone_trimmed <- "((Dryopteris:366.451, (Pinus:231.228, (Limonium:82.92708, Viburnum:43.53464):214):75):330);" # subtract the crown age of each clade from the edge length for each of the tips
backbone_tree <- read.tree(text = backbone_trimmed)
plot(backbone_tree)
# 3. Graft the crown trees (Dryopteris, Pinus, Limonium, Viburnum) into the backbone
grafted_tree <- bind.tree(backbone_tree, tree_dryopteris, where = which(backbone_tree$tip.label == "Dryopteris"), position = 0) %>%
bind.tree(grafted_tree, tree_pinus, where = which(grafted_tree$tip.label == "Pinus"), position = 0) %>%
bind.tree(grafted_tree, tree_limonium, where = which(grafted_tree$tip.label == "Limonium"), position = 0) %>%
bind.tree(grafted_tree, tree_viburnum, where = which(grafted_tree$tip.label == "Viburnum"), position = 0)
seqs <- readr::read_csv(here::here("combined_stability/aa_sequences.csv")) %>%
filter(species != "spinach") %>%
rename(ShortName = species)
stability_temp <- readr::read_csv(here::here("combined_stability/ddG_species.csv"))
lm <- lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp)
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Dryopteris")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Limonium")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Pinus")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Viburnum")) %>% summary()
confint(lm)
summary(lm)
# nls_model <- nls(TotalEnergyRelative ~ exp(a + b / GrowingSeasonTemp_mean),
#                  data = stability_temp,
#                  start = list(a = 1, b = 1))
# new_data <- tibble(GrowingSeasonTemp_mean = seq(min(stability_temp %>% pull(GrowingSeasonTemp_mean)),
#                                                 max(stability_temp %>% pull(GrowingSeasonTemp_mean)),
#                                                 length.out = 200))
# nls_ci <- as_tibble(investr::predFit(nls_model, new_data, interval = "confidence", level= 0.95)) %>%
#   bind_cols(new_data)
# y_pred <- predict(nls_model)
# rss <- sum((y_true - y_pred)^2)
# tss <- sum((y_true - mean(y_true))^2)
# r2 <- 1 - rss / tss
## NONPHYLOGENETIC REGRESSION
# nls_args <- list(formula = y ~ exp(a + b / x),
#                  start = list(a = 1, b = 2))
# Step 1: Prepare base variables
plot <- stability_temp %>%
ggplot(aes(x = GrowingSeasonTemp_mean, y = TotalEnergyRelative)) +
# stat_density_2d(aes(color = Genus, linetype = Genus), adjust = 0.5, bins = 10) +
# stat_density_2d(color = "grey", adjust = 1.1) +
geom_smooth(formula = y ~ x,
method = "lm",
color = "black",
linewidth = 0.5) +
# geom_ribbon(aes(x = GrowingSeasonTemp_mean,
#                 ymin = lwr, ymax = upr),
#             inherit.aes = FALSE,
#             data = nls_ci,
#             fill = "grey") +
# ggpmisc::stat_fit_augment(method = "nls",
#                           method.args = nls_args,
#                           color = "black",
#                           linewidth = 0.5) +
# ggpmisc::stat_fit_tidy(method = "nls",
#                        method.args = nls_args,
#                        aes(label = sprintf("log(italic(y)) == %.3g + %.3g / italic(x)",
#                                            after_stat(a_estimate),
#                                            after_stat(b_estimate))),
#                        label.x = "right",
#               label.y = 0.85,
#               size = 3,
#               parse = TRUE) +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("rr", "p.value")),
small.p = TRUE,
label.x = "right",
label.y = "top",
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("eq")),
small.p = TRUE,
label.x = "right",
label.y = 0.87,
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
geom_point(#aes(color = Genus, shape = Genus),
shape = 21,
size = 0.5) +
annotate("text",
label = "A", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
scale_color_manual(values = c("#fde725", "#35b779", "#31688e", "#440154")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
scale_x_continuous(limits = c(5, 30), breaks = seq(5, 30, 5)) +
scale_y_continuous(limits = c(-2.5, 15), breaks = seq(-5, 15, 5)) +
# scale_y_continuous(limits = c(-1870, -1730), breaks = seq(-1900, -1700, 40)) +
labs(x = "Growing season temperature (°C)",
y = bquote(atop("← more stable       less stable →",
Delta*Delta*italic("G")~"(kcal "*mol^-1~large~subunit^-1*")"))) +
# Delta*italic("G")["fold"]~"(kcal "*mol^-1*")"))) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.text = element_text(face = "italic")) +
cowplot::panel_border(color = "black", size = 1)
plot
# ggsave(here::here("figure_temp_stability.svg"), plot, height = 2.75, width = 3, dpi = 1000)
# PHYLOGENETIC INDEPENDENT CONTRASTS
tree_all_sp <- ape::read.tree(here::here("combined_stability/dated_species_tree.tre"))
pic_species <- intersect(stability_temp %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
tree <- tree_all_sp %>% ape::keep.tip(pic_species)
stability_pic <- ape::pic(stability_temp %>%
filter(ShortName %in% pic_species) %>%
distinct(ShortName, .keep_all = TRUE) %>% # Seqs 313 and 314 are different but the same species, just take the first one, they are similar
select(ShortName, TotalEnergyRelative) %>%
tibble::deframe(),
tree) %>%
tibble::enframe(name = "node", value = "StabilityPIC")
temp_pic <- ape::pic(stability_temp  %>%
filter(ShortName %in% pic_species)  %>%
distinct(ShortName, GrowingSeasonTemp_mean ) %>%
tibble::deframe(),
tree)  %>%
tibble::enframe(name = "node", value = "TemperaturePIC") %>%
select(!node)
stability_temp_pic <- bind_cols(stability_pic, temp_pic)
lm_pic <- lm(StabilityPIC ~ TemperaturePIC, data = stability_temp_pic)
confint(lm_pic)
summary(lm_pic)
plot_pic <- ggplot(stability_temp_pic, aes(x = TemperaturePIC, y = StabilityPIC)) +
# stat_density_2d(color = "grey",
#                 n = 500,
#                 h = c(density(stability_temp_pic$TemperaturePIC, bw = "UCV")$bw,
#                       density(stability_temp_pic$StabilityPIC, bw = "UCV")$bw)) +
# geom_smooth(formula = y ~ x,
#             method = "lm",
#             color = "black",
#             linewidth = 0.5) +
geom_point(shape = 21,
size = 0.5) +
annotate("text",
label = "B", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("rr", "p.value")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = "top",
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("eq")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = 0.87,
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
scale_x_continuous(limits = c(-20, 20), breaks = seq(-20, 20, 10)) +
scale_y_continuous(limits = c(-5, 7.5), breaks = seq(-5, 7.5, 2.5)) +
# scale_y_continuous(limits = c(-50, 50), breaks = seq(-50, 50, 25)) +
labs(x = "Growing season temp. contrasts",
y = bquote(Delta*Delta*italic("G")~"contrasts")) +
# y = bquote(Delta*italic("G")["fold"]~"contrasts")) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
cowplot::panel_border(color = "black", size = 1)
plot_pic
# ggsave(here::here("figure_temp_stability_pic.svg"), plot_pic, height = 2.75, width = 3, dpi = 1000)
ggsave(here::here("figure_temp_stability.svg"),
cowplot::plot_grid(plot, NULL, plot_pic,
rel_widths = c(1, -0.1, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 5.5,
bg = "white", dpi = 1000)
ggsave(here::here("figure_temp_stability.png"),
cowplot::plot_grid(plot, NULL, plot_pic,
rel_widths = c(1, -0.1, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 5.5,
bg = "white", dpi = 1000)
seqs <- readr::read_csv(here::here("combined_stability/aa_sequences.csv")) %>%
filter(species != "spinach") %>%
rename(ShortName = species)
stability_temp <- readr::read_csv(here::here("combined_stability/ddG_species.csv"))
lm <- lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp)
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Dryopteris")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Limonium")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Pinus")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Viburnum")) %>% summary()
confint(lm)
summary(lm)
# nls_model <- nls(TotalEnergyRelative ~ exp(a + b / GrowingSeasonTemp_mean),
#                  data = stability_temp,
#                  start = list(a = 1, b = 1))
# new_data <- tibble(GrowingSeasonTemp_mean = seq(min(stability_temp %>% pull(GrowingSeasonTemp_mean)),
#                                                 max(stability_temp %>% pull(GrowingSeasonTemp_mean)),
#                                                 length.out = 200))
# nls_ci <- as_tibble(investr::predFit(nls_model, new_data, interval = "confidence", level= 0.95)) %>%
#   bind_cols(new_data)
# y_pred <- predict(nls_model)
# rss <- sum((y_true - y_pred)^2)
# tss <- sum((y_true - mean(y_true))^2)
# r2 <- 1 - rss / tss
## NONPHYLOGENETIC REGRESSION
# nls_args <- list(formula = y ~ exp(a + b / x),
#                  start = list(a = 1, b = 2))
# Step 1: Prepare base variables
plot <- stability_temp %>%
ggplot(aes(x = GrowingSeasonTemp_mean, y = TotalEnergyRelative)) +
# stat_density_2d(aes(color = Genus, linetype = Genus), adjust = 0.5, bins = 10) +
# stat_density_2d(color = "grey", adjust = 1.1) +
geom_smooth(formula = y ~ x,
method = "lm",
color = "black",
linewidth = 0.5) +
# geom_ribbon(aes(x = GrowingSeasonTemp_mean,
#                 ymin = lwr, ymax = upr),
#             inherit.aes = FALSE,
#             data = nls_ci,
#             fill = "grey") +
# ggpmisc::stat_fit_augment(method = "nls",
#                           method.args = nls_args,
#                           color = "black",
#                           linewidth = 0.5) +
# ggpmisc::stat_fit_tidy(method = "nls",
#                        method.args = nls_args,
#                        aes(label = sprintf("log(italic(y)) == %.3g + %.3g / italic(x)",
#                                            after_stat(a_estimate),
#                                            after_stat(b_estimate))),
#                        label.x = "right",
#               label.y = 0.85,
#               size = 3,
#               parse = TRUE) +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("rr", "p.value")),
small.p = TRUE,
label.x = "right",
label.y = "top",
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("eq")),
small.p = TRUE,
label.x = "right",
label.y = 0.87,
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
geom_point(#aes(color = Genus, shape = Genus),
shape = 21,
size = 0.5) +
annotate("text",
label = "A", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
scale_color_manual(values = c("#fde725", "#35b779", "#31688e", "#440154")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
scale_x_continuous(limits = c(5, 30), breaks = seq(5, 30, 5)) +
scale_y_continuous(limits = c(-2.5, 15), breaks = seq(-5, 15, 5)) +
# scale_y_continuous(limits = c(-1870, -1730), breaks = seq(-1900, -1700, 40)) +
labs(x = "Growing season temperature (°C)",
y = bquote(atop("← more stable       less stable →",
Delta*Delta*italic("G")~"(kcal "*mol^-1~large~subunit^-1*")"))) +
# Delta*italic("G")["fold"]~"(kcal "*mol^-1*")"))) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.text = element_text(face = "italic")) +
cowplot::panel_border(color = "black", size = 1)
plot
# ggsave(here::here("figure_temp_stability.svg"), plot, height = 2.75, width = 3, dpi = 1000)
# PHYLOGENETIC INDEPENDENT CONTRASTS
tree_all_sp <- ape::read.tree(here::here("combined_stability/dated_species_tree.tre"))
pic_species <- intersect(stability_temp %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
tree <- tree_all_sp %>% ape::keep.tip(pic_species)
stability_pic <- ape::pic(stability_temp %>%
filter(ShortName %in% pic_species) %>%
distinct(ShortName, .keep_all = TRUE) %>% # Seqs 313 and 314 are different but the same species, just take the first one, they are similar
select(ShortName, TotalEnergyRelative) %>%
tibble::deframe(),
tree) %>%
tibble::enframe(name = "node", value = "StabilityPIC")
temp_pic <- ape::pic(stability_temp  %>%
filter(ShortName %in% pic_species)  %>%
distinct(ShortName, GrowingSeasonTemp_mean ) %>%
tibble::deframe(),
tree)  %>%
tibble::enframe(name = "node", value = "TemperaturePIC") %>%
select(!node)
stability_temp_pic <- bind_cols(stability_pic, temp_pic)
lm_pic <- lm(StabilityPIC ~ TemperaturePIC, data = stability_temp_pic)
confint(lm_pic)
summary(lm_pic)
plot_pic <- ggplot(stability_temp_pic, aes(x = TemperaturePIC, y = StabilityPIC)) +
# stat_density_2d(color = "grey",
#                 n = 500,
#                 h = c(density(stability_temp_pic$TemperaturePIC, bw = "UCV")$bw,
#                       density(stability_temp_pic$StabilityPIC, bw = "UCV")$bw)) +
# geom_smooth(formula = y ~ x,
#             method = "lm",
#             color = "black",
#             linewidth = 0.5) +
geom_point(shape = 21,
size = 0.5) +
annotate("text",
label = "B", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("rr", "p.value")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = "top",
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("eq")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = 0.87,
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
scale_x_continuous(limits = c(-20, 20), breaks = seq(-20, 20, 10)) +
scale_y_continuous(limits = c(-5, 7.5), breaks = seq(-5, 7.5, 2.5)) +
# scale_y_continuous(limits = c(-50, 50), breaks = seq(-50, 50, 25)) +
labs(x = "Growing season temp. contrasts",
y = bquote(Delta*Delta*italic("G")~"contrasts")) +
# y = bquote(Delta*italic("G")["fold"]~"contrasts")) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
cowplot::panel_border(color = "black", size = 1)
plot_pic
# ggsave(here::here("figure_temp_stability_pic.svg"), plot_pic, height = 2.75, width = 3, dpi = 1000)
ggsave(here::here("figure_temp_stability.svg"),
cowplot::plot_grid(plot, NULL, plot_pic,
rel_widths = c(1, -0.1, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 5.5,
bg = "white", dpi = 1000)
ggsave(here::here("figure_temp_stability.png"),
cowplot::plot_grid(plot, NULL, plot_pic,
rel_widths = c(1, -0.1, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 5.5,
bg = "white", dpi = 1000)
plot <- stability_temp %>%
ggplot(aes(x = GrowingSeasonTemp_mean, y = TotalEnergyRelative)) +
# stat_density_2d(aes(color = Genus, linetype = Genus), adjust = 0.5, bins = 10) +
# stat_density_2d(color = "grey", adjust = 1.1) +
geom_smooth(formula = y ~ x,
method = "lm",
color = "black",
linewidth = 0.5) +
# geom_ribbon(aes(x = GrowingSeasonTemp_mean,
#                 ymin = lwr, ymax = upr),
#             inherit.aes = FALSE,
#             data = nls_ci,
#             fill = "grey") +
# ggpmisc::stat_fit_augment(method = "nls",
#                           method.args = nls_args,
#                           color = "black",
#                           linewidth = 0.5) +
# ggpmisc::stat_fit_tidy(method = "nls",
#                        method.args = nls_args,
#                        aes(label = sprintf("log(italic(y)) == %.3g + %.3g / italic(x)",
#                                            after_stat(a_estimate),
#                                            after_stat(b_estimate))),
#                        label.x = "right",
#               label.y = 0.85,
#               size = 3,
#               parse = TRUE) +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("rr", "p.value")),
small.p = TRUE,
label.x = "right",
label.y = "top",
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("eq")),
small.p = TRUE,
label.x = "right",
label.y = 0.87,
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
geom_point(#aes(color = Genus, shape = Genus),
shape = 21,
size = 0.5) +
annotate("text",
label = "A", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
scale_color_manual(values = c("#fde725", "#35b779", "#31688e", "#440154")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
# scale_x_continuous(limits = c(5, 30), breaks = seq(5, 30, 5)) +
# scale_y_continuous(limits = c(-2.5, 15), breaks = seq(-5, 15, 5)) +
# scale_y_continuous(limits = c(-1870, -1730), breaks = seq(-1900, -1700, 40)) +
labs(x = "Growing season temperature (°C)",
y = bquote(atop("← more stable       less stable →",
Delta*Delta*italic("G")~"(kcal "*mol^-1~large~subunit^-1*")"))) +
# Delta*italic("G")["fold"]~"(kcal "*mol^-1*")"))) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.text = element_text(face = "italic")) +
cowplot::panel_border(color = "black", size = 1)
plot
