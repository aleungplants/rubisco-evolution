mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
tree <- ape::read.tree(here::here("dryopteris_csubst.tre")) %>%
bind.tip(., tip.label = "ROOT", edge.length = 0, where = Ntip(.) + 1)
rainforest <- readr::read_csv(here::here("gbif_data", "rainforest_summary.csv")) %>%
group_by(Species) %>%
summarise(Rainforest = ifelse(Rainforest == "non-rainforest", "0", "1"))
aa
SUBSTITUTION = "F282H"
OVERWRITE = FALSE
file_list <- list.files(here::here("plots/simmaps"))
if (OVERWRITE == FALSE & paste("rainforest", SUBSTITUTION, ".svg", sep = "") %in% file_list) {
print("File exists, continuing")
next
}
print(paste("Doing site", SUBSTITUTION))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
common_species <- intersect(pull(rainforest, Species), pull(aa_site, Species))
pruned_tree <- tree %>% ape::keep.tip(common_species)
ER_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
ARD_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = c("0" = 1, "1" = 0))
if (AIC(ER_aa) < AIC(ARD_aa)) {
print("AA: Choosing ER")
sim_tree_aa <- simmap(ER_aa, nsim = 100)
} else {
print("AA: Choosing ARD")
sim_tree_aa <- simmap(ARD_aa, nsim = 100)
}
dmap_aa <- densityMap(sim_tree_aa)
dmap_aa_color <- setMap(dmap_aa, c("black", "#fde725"))
ER_rainforest <- fitMk(pruned_tree,
rainforest %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = "fitzjohn")
ARD_rainforest <- fitMk(pruned_tree,
rainforest %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = "fitzjohn")
if (AIC(ER_rainforest) < AIC(ARD_rainforest)) {
print("rainforest: Choosing ER")
sim_tree_rainforest <- simmap(ER_rainforest, nsim = 100)
} else {
print("rainforest: Choosing ARD")
sim_tree_rainforest <- simmap(ARD_rainforest, nsim = 100)
}
dmap_rainforest <- densityMap(sim_tree_rainforest)
dmap_rainforest_color <- setMap(dmap_rainforest, c("black", "#21918c"))
svg(here::here("plots/simmaps", paste( "rainforest", SUBSTITUTION, ".svg", sep = "")),
height = 5, width = 5)
layout(matrix(1:2,1,2),widths=c(1,1))
par(oma=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(dmap_aa_color, lwd = 2, ftype="off", legend = FALSE, no.margin=T)
plot(dmap_rainforest_color, lwd = 2, direction="leftwards", ftype="off", legend = FALSE,no.margin=T)
dev.off()
library(phytools)
dep_y_pagel <- readxl::read_xlsx(here::here("pagels_test_rainforest_0.xlsx")) %>%
rowwise() %>%
mutate(Min_AIC = min(AIC_Dependent, AIC_Independent)) %>%
select(Substitution, Min_AIC, p)
dep_x_pagel <- readxl::read_xlsx(here::here("pagels_test_rainforest_reverse_0.xlsx"))  %>%
rowwise() %>%
mutate(Min_AIC_Re = min(AIC_Dependent, AIC_Independent)) %>%
rename(p_Re = p) %>%
select(Substitution, Min_AIC_Re, p_Re)
best_models <- full_join(dep_y_pagel, dep_x_pagel) %>%
mutate(BestDepVar = case_when(Min_AIC < Min_AIC_Re & p < 0.05 ~ "y",
Min_AIC > Min_AIC_Re & p_Re < 0.05 ~ "x")) %>%
filter(!is.na(BestDepVar)) %>%
distinct(Substitution) %>%
mutate(Site = stringr::str_extract(Substitution, "[:digit:]+") %>% as.numeric())
sites_of_interest <- best_models %>%
pull(Site) %>%
unique()
subs_of_interest <- best_models %>%
pull(Substitution) %>%
unique()
aa <- readr::read_csv(here::here("aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
tree <- ape::read.tree(here::here("dryopteris_csubst.tre")) %>%
bind.tip(., tip.label = "ROOT", edge.length = 0, where = Ntip(.) + 1)
rainforest <- readr::read_csv(here::here("gbif_data", "rainforest_summary.csv")) %>%
group_by(Species) %>%
summarise(Rainforest = ifelse(Rainforest == "non-rainforest", "0", "1"))
SUBSTITUTION = "F282H"
OVERWRITE = FALSE
for (SUBSTITUTION in subs_of_interest) {
file_list <- list.files(here::here("plots/simmaps"))
if (OVERWRITE == FALSE & paste("rainforest", SUBSTITUTION, ".svg", sep = "") %in% file_list) {
print("File exists, continuing")
next
}
print(paste("Doing site", SUBSTITUTION))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
common_species <- intersect(pull(rainforest, Species), pull(aa_site, Species))
pruned_tree <- tree %>% ape::keep.tip(common_species)
ER_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
ARD_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = c("0" = 1, "1" = 0))
if (AIC(ER_aa) < AIC(ARD_aa)) {
print("AA: Choosing ER")
sim_tree_aa <- simmap(ER_aa, nsim = 100)
} else {
print("AA: Choosing ARD")
sim_tree_aa <- simmap(ARD_aa, nsim = 100)
}
dmap_aa <- densityMap(sim_tree_aa)
dmap_aa_color <- setMap(dmap_aa, c("black", "#fde725"))
ER_rainforest <- fitMk(pruned_tree,
rainforest %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = "fitzjohn")
ARD_rainforest <- fitMk(pruned_tree,
rainforest %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = "fitzjohn")
if (AIC(ER_rainforest) < AIC(ARD_rainforest)) {
print("rainforest: Choosing ER")
sim_tree_rainforest <- simmap(ER_rainforest, nsim = 100)
} else {
print("rainforest: Choosing ARD")
sim_tree_rainforest <- simmap(ARD_rainforest, nsim = 100)
}
dmap_rainforest <- densityMap(sim_tree_rainforest)
dmap_rainforest_color <- setMap(dmap_rainforest, c("black", "#7c91c7"))
svg(here::here("plots/simmaps", paste( "rainforest", SUBSTITUTION, ".svg", sep = "")),
height = 5, width = 5)
layout(matrix(1:2,1,2),widths=c(1,1))
par(oma=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(dmap_aa_color, lwd = 2, ftype="off", legend = FALSE, no.margin=T)
plot(dmap_rainforest_color, lwd = 2, direction="leftwards", ftype="off", legend = FALSE,no.margin=T)
dev.off()
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
here::i_am("14. analyze.Rmd")
ggplot2::theme_set(cowplot::theme_cowplot(line_size = 0.25, font_size = 10) +
theme(axis.ticks.length = unit(-3, "pt"),
axis.ticks = element_line(linewidth = 0.25),
strip.background = element_blank(),
strip.placement = "outside",
axis.text.x.top = element_blank(),
axis.text.y.right = element_blank(),
axis.title.x.top = element_blank(),
axis.title.y.right = element_blank()))
full_specific_epithet <- readr::read_csv(here::here("accessions.csv")) %>%
dplyr::select(Species) %>%
mutate(ShortName = stringr::str_sub(stringr::word(Species, 2), 1, 10), .before = "Species")
dep_y_pagel <- readxl::read_xlsx(here::here("analyze/pagels_test_cold.xlsx")) %>%
rowwise() %>%
mutate(Min_AIC = min(AIC_Dependent, AIC_Independent)) %>%
select(Substitution, Min_AIC, p)
dep_y_pagel <- readxl::read_xlsx(here::here("analyze/pagels_test_fire.xlsx")) %>%
rowwise() %>%
mutate(Min_AIC = min(AIC_Dependent, AIC_Independent)) %>%
select(Substitution, Min_AIC, p)
library(phytools)
full_specific_epithet <- readr::read_csv(here::here("accessions.csv")) %>%
dplyr::select(Species) %>%
mutate(ShortName = stringr::str_sub(stringr::word(Species, 2), 1, 10), .before = "Species")
dep_y_pagel <- readxl::read_xlsx(here::here("pagels_test_fire.xlsx")) %>%
rowwise() %>%
mutate(Min_AIC = min(AIC_Dependent, AIC_Independent)) %>%
select(Substitution, Min_AIC, p)
dep_x_pagel <- readxl::read_xlsx(here::here("pagels_test_fire_reverse.xlsx"))  %>%
rowwise() %>%
mutate(Min_AIC_Re = min(AIC_Dependent, AIC_Independent)) %>%
rename(p_Re = p) %>%
select(Substitution, Min_AIC_Re, p_Re)
best_models <- full_join(dep_y_pagel, dep_x_pagel) %>%
mutate(BestDepVar = case_when(Min_AIC < Min_AIC_Re & p < 0.05 ~ "y",
Min_AIC > Min_AIC_Re & p_Re < 0.05 ~ "x")) %>%
filter(!is.na(BestDepVar)) %>%
distinct(Substitution) %>%
mutate(Site = stringr::str_extract(Substitution, "[:digit:]+") %>% as.numeric())
sites_of_interest <- best_models %>%
pull(Site) %>%
unique()
subs_of_interest <- best_models %>%
pull(Substitution) %>%
unique()
aa <- readr::read_csv(here::here("analyze", "aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
full_join(full_specific_epithet, ., by = "ShortName") %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
aa <- readr::read_csv(here::here("aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
full_join(full_specific_epithet, ., by = "ShortName") %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
aa <- readr::read_csv(here::here("aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
rename(ShortName = Species) %>%
full_join(full_specific_epithet, ., by = "ShortName") %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
aa
View(aa)
tree <- ape::read.tree(here::here("Pinus_time_csubst.tre")) %>%
treeio::rename_taxa(full_specific_epithet) %>%
bind.tip(., tip.label = "ROOT", edge.length = 0, where = Ntip(.) + 1)
fire <- readxl::read_xlsx(here::here("jin_morphology.xlsx")) %>%
mutate(Fire = ifelse(`Fire syndrome` == "Avoider", "0", "1")) %>%
select(Species, Fire) %>%
distinct(Species, .keep_all = TRUE) %>%
add_row(Species = "ROOT", Fire = "0")
SITE = 254
OVERWRITE = FALSE
SUBSTITUION = "A254V"
OVERWRITE = FALSE
file_list <- list.files(here::here("plots/simmaps"))
if (OVERWRITE == FALSE & paste("fire", SUBSTITUTION, ".svg", sep = "") %in% file_list) {
print("File exists, continuing")
next
}
print(paste("Doing site", SUBSTITUTION))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
common_species <- intersect(pull(fire, Species), pull(aa_site, Species))
pruned_tree <- tree %>% ape::keep.tip(common_species)
ER_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
aa_site
aa
pull(fire, Species)
pull(aa_site, Species)
aa_site
aa <- readr::read_csv(here::here("aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
rename(ShortName = Species) %>%
full_join(full_specific_epithet, ., by = "ShortName") %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
aa
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
aa_site
aa
aa %>%
filter(Substitution == SUBSTITUTION)
aa
SUBSTITUION = "A254V"
SUBSTITUION
aa %>%
filter(Substitution == SUBSTITUTION)
aa
SUBSTITUION = "L375M"
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION)
aa_site
aa
aa %>% filter(Species == "Pinus nigra")
aa %>% filter(Substitution == "V471A")
SUBSTITUION = "L375M"
aa %>%
filter(Substitution == SUBSTITUTION)
common_species <- intersect(pull(fire, Species), pull(aa_site, Species))
aa %>%
filter(Substitution == SUBSTITUTIONcommon_species)
common_species
for (SUBSTITUTION in subs_of_interest) {
file_list <- list.files(here::here("plots/simmaps"))
if (OVERWRITE == FALSE & paste("fire", SUBSTITUTION, ".svg", sep = "") %in% file_list) {
print("File exists, continuing")
next
}
print(paste("Doing site", SUBSTITUTION))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
print(aa_site)
}
library(phytools)
full_specific_epithet <- readr::read_csv(here::here("accessions.csv")) %>%
dplyr::select(Species) %>%
mutate(ShortName = stringr::str_sub(stringr::word(Species, 2), 1, 10), .before = "Species")
dep_y_pagel <- readxl::read_xlsx(here::here("pagels_test_fire.xlsx")) %>%
rowwise() %>%
mutate(Min_AIC = min(AIC_Dependent, AIC_Independent)) %>%
select(Substitution, Min_AIC, p)
dep_x_pagel <- readxl::read_xlsx(here::here("pagels_test_fire_reverse.xlsx"))  %>%
rowwise() %>%
mutate(Min_AIC_Re = min(AIC_Dependent, AIC_Independent)) %>%
rename(p_Re = p) %>%
select(Substitution, Min_AIC_Re, p_Re)
best_models <- full_join(dep_y_pagel, dep_x_pagel) %>%
mutate(BestDepVar = case_when(Min_AIC < Min_AIC_Re & p < 0.05 ~ "y",
Min_AIC > Min_AIC_Re & p_Re < 0.05 ~ "x")) %>%
filter(!is.na(BestDepVar)) %>%
distinct(Substitution) %>%
mutate(Site = stringr::str_extract(Substitution, "[:digit:]+") %>% as.numeric())
sites_of_interest <- best_models %>%
pull(Site) %>%
unique()
subs_of_interest <- best_models %>%
pull(Substitution) %>%
unique()
aa <- readr::read_csv(here::here("aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
rename(ShortName = Species) %>%
full_join(full_specific_epithet, ., by = "ShortName") %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
tree <- ape::read.tree(here::here("Pinus_time_csubst.tre")) %>%
treeio::rename_taxa(full_specific_epithet) %>%
bind.tip(., tip.label = "ROOT", edge.length = 0, where = Ntip(.) + 1)
fire <- readxl::read_xlsx(here::here("jin_morphology.xlsx")) %>%
mutate(Fire = ifelse(`Fire syndrome` == "Avoider", "0", "1")) %>%
select(Species, Fire) %>%
distinct(Species, .keep_all = TRUE) %>%
add_row(Species = "ROOT", Fire = "0")
SUBSTITUION = "L375M"
OVERWRITE = FALSE
for (SUBSTITUTION in subs_of_interest) {
file_list <- list.files(here::here("plots/simmaps"))
if (OVERWRITE == FALSE & paste("fire", SUBSTITUTION, ".svg", sep = "") %in% file_list) {
print("File exists, continuing")
next
}
print(paste("Doing site", SUBSTITUTION))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
common_species <- intersect(pull(fire, Species), pull(aa_site, Species))
pruned_tree <- tree %>% ape::keep.tip(common_species)
ER_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
ARD_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = c("0" = 1, "1" = 0))
if (AIC(ER_aa) < AIC(ARD_aa)) {
print("AA: Choosing ER")
sim_tree_aa <- simmap(ER_aa, nsim = 100)
} else {
print("AA: Choosing ARD")
sim_tree_aa <- simmap(ARD_aa, nsim = 100)
}
dmap_aa <- densityMap(sim_tree_aa)
dmap_aa_color <- setMap(dmap_aa, c("black", "#fde725"))
ER_fire <- fitMk(pruned_tree,
fire %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
ARD_fire <- fitMk(pruned_tree,
fire %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = c("0" = 1, "1" = 0))
if (AIC(ER_fire) < AIC(ARD_fire)) {
print("fire: Choosing ER")
sim_tree_fire <- simmap(ER_fire, nsim = 100)
} else {
print("fire: Choosing ARD")
sim_tree_fire <- simmap(ARD_fire, nsim = 100)
}
dmap_fire <- densityMap(sim_tree_fire)
dmap_fire_color <- setMap(dmap_fire, c("black", "red"))
svg(here::here("plots/simmaps", paste( "fire", SUBSTITUTION, ".svg", sep = "")),
height = 5, width = 5)
layout(matrix(1:2,1,2),widths=c(1,1))
par(oma=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(dmap_aa_color, lwd = 2, ftype="off", legend = FALSE, no.margin=T)
plot(dmap_fire_color, lwd = 2, direction="leftwards", ftype="off", legend = FALSE,no.margin=T)
dev.off()
}
library(phytools)
full_specific_epithet <- readr::read_csv(here::here("accessions.csv")) %>%
dplyr::select(Species) %>%
mutate(ShortName = stringr::str_sub(stringr::word(Species, 2), 1, 10), .before = "Species")
dep_y_pagel <- readxl::read_xlsx(here::here("pagels_test_fire.xlsx")) %>%
rowwise() %>%
mutate(Min_AIC = min(AIC_Dependent, AIC_Independent)) %>%
select(Substitution, Min_AIC, p)
dep_x_pagel <- readxl::read_xlsx(here::here("pagels_test_fire_reverse.xlsx"))  %>%
rowwise() %>%
mutate(Min_AIC_Re = min(AIC_Dependent, AIC_Independent)) %>%
rename(p_Re = p) %>%
select(Substitution, Min_AIC_Re, p_Re)
best_models <- full_join(dep_y_pagel, dep_x_pagel) %>%
mutate(BestDepVar = case_when(Min_AIC < Min_AIC_Re & p < 0.05 ~ "y",
Min_AIC > Min_AIC_Re & p_Re < 0.05 ~ "x")) %>%
filter(!is.na(BestDepVar)) %>%
distinct(Substitution) %>%
mutate(Site = stringr::str_extract(Substitution, "[:digit:]+") %>% as.numeric())
sites_of_interest <- best_models %>%
pull(Site) %>%
unique()
subs_of_interest <- best_models %>%
pull(Substitution) %>%
unique()
aa <- readr::read_csv(here::here("aa_at_sites_ancestral.csv")) %>%
filter(Site %in% sites_of_interest) %>%
rename(ShortName = Species) %>%
full_join(full_specific_epithet, ., by = "ShortName") %>%
filter(AA != "-") %>%
select(Species, Site, AA) %>%
full_join(best_models) %>%
mutate(Ancestral = ifelse(AA == stringr::str_sub(Substitution, -1, -1), "1", "0")) %>%
select(Species, Substitution, Ancestral)
tree <- ape::read.tree(here::here("Pinus_time_csubst.tre")) %>%
treeio::rename_taxa(full_specific_epithet) %>%
bind.tip(., tip.label = "ROOT", edge.length = 0, where = Ntip(.) + 1)
fire <- readxl::read_xlsx(here::here("jin_morphology.xlsx")) %>%
mutate(Fire = ifelse(`Fire syndrome` == "Avoider", "0", "1")) %>%
select(Species, Fire) %>%
distinct(Species, .keep_all = TRUE) %>%
add_row(Species = "ROOT", Fire = "0")
SUBSTITUION = "L375M"
OVERWRITE = FALSE
for (SUBSTITUTION in subs_of_interest) {
file_list <- list.files(here::here("plots/simmaps"))
if (OVERWRITE == FALSE & paste("fire", SUBSTITUTION, ".svg", sep = "") %in% file_list) {
print("File exists, continuing")
next
}
print(paste("Doing site", SUBSTITUTION))
aa_site <- aa %>%
filter(Substitution == SUBSTITUTION) %>%
select(!Substitution)
common_species <- intersect(pull(fire, Species), pull(aa_site, Species))
pruned_tree <- tree %>% ape::keep.tip(common_species)
ER_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
ARD_aa <- fitMk(pruned_tree,
aa_site %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = c("0" = 1, "1" = 0))
if (AIC(ER_aa) < AIC(ARD_aa)) {
print("AA: Choosing ER")
sim_tree_aa <- simmap(ER_aa, nsim = 100)
} else {
print("AA: Choosing ARD")
sim_tree_aa <- simmap(ARD_aa, nsim = 100)
}
dmap_aa <- densityMap(sim_tree_aa)
dmap_aa_color <- setMap(dmap_aa, c("black", "#fde725"))
ER_fire <- fitMk(pruned_tree,
fire %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ER",
pi = c("0" = 1, "1" = 0))
ARD_fire <- fitMk(pruned_tree,
fire %>% filter(Species %in% common_species) %>% tibble::deframe(),
model = "ARD",
pi = c("0" = 1, "1" = 0))
if (AIC(ER_fire) < AIC(ARD_fire)) {
print("fire: Choosing ER")
sim_tree_fire <- simmap(ER_fire, nsim = 100)
} else {
print("fire: Choosing ARD")
sim_tree_fire <- simmap(ARD_fire, nsim = 100)
}
dmap_fire <- densityMap(sim_tree_fire)
dmap_fire_color <- setMap(dmap_fire, c("black", "#d42dfc"))
svg(here::here("plots/simmaps", paste( "fire", SUBSTITUTION, ".svg", sep = "")),
height = 5, width = 5)
layout(matrix(1:2,1,2),widths=c(1,1))
par(oma=c(0,0,0,0))
par(mar=c(0,0,0,0))
plot(dmap_aa_color, lwd = 2, ftype="off", legend = FALSE, no.margin=T)
plot(dmap_fire_color, lwd = 2, direction="leftwards", ftype="off", legend = FALSE,no.margin=T)
dev.off()
}
