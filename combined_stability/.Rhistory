scale_fill_manual(values = c("#fde725", "#35b779", "#31688e", "#440154")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
annotate("text",
label = "B", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
ggpubr::stat_pvalue_manual(group_ttest,
hide.ns = TRUE,
tip.length = 0.01) +
labs(x = "Growing season temp. percentile",
y = bquote(Delta*Delta*italic("G")["fold"]~"(kcal"~mol^-1~large~subunit^-1*")")) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
scale_y_continuous(limits = c(NA, 15), breaks = seq(-5, 15, 5)) +
cowplot::panel_border(color = "black", size = 0.5) +
coord_cartesian(clip = "off")
# geom_point()
group_plot
seqs <- readr::read_csv(here::here("combined_stability/aa_sequences.csv")) %>%
filter(species != "spinach") %>%
rename(ShortName = species)
stability_temp <- readr::read_csv(here::here("combined_stability/ddG_species.csv"))
lm <- lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp)
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Dryopteris")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Limonium")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Pinus")) %>% summary()
lm(TotalEnergyRelative ~ GrowingSeasonTemp_mean, data = stability_temp %>% filter(Genus == "Viburnum")) %>% summary()
confint(lm)
summary(lm)
# nls_model <- nls(TotalEnergyRelative ~ exp(a + b / GrowingSeasonTemp_mean),
#                  data = stability_temp,
#                  start = list(a = 1, b = 1))
# new_data <- tibble(GrowingSeasonTemp_mean = seq(min(stability_temp %>% pull(GrowingSeasonTemp_mean)),
#                                                 max(stability_temp %>% pull(GrowingSeasonTemp_mean)),
#                                                 length.out = 200))
# nls_ci <- as_tibble(investr::predFit(nls_model, new_data, interval = "confidence", level= 0.95)) %>%
#   bind_cols(new_data)
# y_pred <- predict(nls_model)
# rss <- sum((y_true - y_pred)^2)
# tss <- sum((y_true - mean(y_true))^2)
# r2 <- 1 - rss / tss
## NONPHYLOGENETIC REGRESSION
# nls_args <- list(formula = y ~ exp(a + b / x),
#                  start = list(a = 1, b = 2))
# Step 1: Prepare base variables
plot <- stability_temp %>%
ggplot(aes(x = GrowingSeasonTemp_mean, y = TotalEnergyRelative)) +
# stat_density_2d(aes(color = Genus, linetype = Genus), adjust = 0.5, bins = 10) +
# stat_density_2d(color = "grey", adjust = 1.1) +
geom_smooth(formula = y ~ x,
method = "lm",
color = "black",
linewidth = 0.5) +
# geom_ribbon(aes(x = GrowingSeasonTemp_mean,
#                 ymin = lwr, ymax = upr),
#             inherit.aes = FALSE,
#             data = nls_ci,
#             fill = "grey") +
# ggpmisc::stat_fit_augment(method = "nls",
#                           method.args = nls_args,
#                           color = "black",
#                           linewidth = 0.5) +
# ggpmisc::stat_fit_tidy(method = "nls",
#                        method.args = nls_args,
#                        aes(label = sprintf("log(italic(y)) == %.3g + %.3g / italic(x)",
#                                            after_stat(a_estimate),
#                                            after_stat(b_estimate))),
#                        label.x = "right",
#               label.y = 0.85,
#               size = 3,
#               parse = TRUE) +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("rr", "p.value")),
small.p = TRUE,
label.x = "right",
label.y = "top",
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
ggpmisc::stat_poly_eq(formula = y ~ x,
ggpmisc::use_label(labels = c("eq")),
small.p = TRUE,
label.x = "right",
label.y = 0.87,
coef.digits = 4,
coef.keep.zeros = TRUE,
rr.digits = 3,
p.digits = 4,
size = 3,
output.type = "expression") +
geom_point(aes(fill = Genus, shape = Genus),
#shape = 21,
size = 0.5) +
annotate("text",
label = "A", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
scale_fill_manual(values = c("#fde725", "#35b779", "#31688e", "#440154")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
scale_x_continuous(limits = c(5, 30), breaks = seq(5, 30, 5)) +
scale_y_continuous(limits = c(-2.5, 15), breaks = seq(-5, 15, 5)) +
# scale_y_continuous(limits = c(-1870, -1730), breaks = seq(-1900, -1700, 40)) +
labs(x = "Growing season temperature (°C)",
y = bquote(atop("← more stable       less stable →",
Delta*Delta*italic("G")[fold]~"(kcal "*mol^-1~large~subunit^-1*")"))) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = -10, l = 0)),
legend.text = element_text(face = "italic")) +
cowplot::panel_border(color = "black", size = 1)
plot
# ggsave(here::here("figure_temp_stability.svg"), plot, height = 2.75, width = 3, dpi = 1000)
# PHYLOGENETIC INDEPENDENT CONTRASTS
tree_all_sp <- ape::read.tree(here::here("combined_stability/dated_species_tree.tre"))
pic_species <- intersect(stability_temp %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
tree <- tree_all_sp %>% ape::keep.tip(pic_species)
stability_pic <- ape::pic(stability_temp %>%
filter(ShortName %in% pic_species) %>%
distinct(ShortName, .keep_all = TRUE) %>% # Seqs 313 and 314 are different but the same species, just take the first one, they are similar
select(ShortName, TotalEnergyRelative) %>%
tibble::deframe(),
tree) %>%
tibble::enframe(name = "node", value = "StabilityPIC")
temp_pic <- ape::pic(stability_temp  %>%
filter(ShortName %in% pic_species)  %>%
distinct(ShortName, GrowingSeasonTemp_mean ) %>%
tibble::deframe(),
tree)  %>%
tibble::enframe(name = "node", value = "TemperaturePIC") %>%
select(!node)
stability_temp_pic <- bind_cols(stability_pic, temp_pic)
lm_pic <- lm(StabilityPIC ~ TemperaturePIC, data = stability_temp_pic)
confint(lm_pic)
summary(lm_pic)
plot_pic <- ggplot(stability_temp_pic, aes(x = TemperaturePIC, y = StabilityPIC)) +
# stat_density_2d(color = "grey",
#                 n = 500,
#                 h = c(density(stability_temp_pic$TemperaturePIC, bw = "UCV")$bw,
#                       density(stability_temp_pic$StabilityPIC, bw = "UCV")$bw)) +
# geom_smooth(formula = y ~ x,
#             method = "lm",
#             color = "black",
#             linewidth = 0.5) +
geom_point(shape = 21,
size = 0.5) +
annotate("text",
label = "C", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("rr", "p.value")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = "top",
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
# ggpmisc::stat_poly_eq(formula = y ~ x,
#                       ggpmisc::use_label(labels = c("eq")),
#                       small.p = TRUE,
#                       label.x = "right",
#                       label.y = 0.87,
#                       coef.digits = 4,
#                       coef.keep.zeros = TRUE,
#                       rr.digits = 3,
#                       p.digits = 4,
#                       size = 3,
#                       output.type = "expression") +
scale_x_continuous(limits = c(-20, 20), breaks = seq(-20, 20, 10)) +
scale_y_continuous(limits = c(-5, 7.5), breaks = seq(-5, 7.5, 2.5)) +
# scale_y_continuous(limits = c(-50, 50), breaks = seq(-50, 50, 25)) +
labs(x = "Growing season temp. contrasts",
#y = bquote(Delta*Delta*italic("G")~"contrasts")) +
y = bquote(Delta*Delta*italic("G")["fold"]~"contrasts")) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = element_text(margin = margin(t = 0, r = 0, b = -10, l = 0))) +
cowplot::panel_border(color = "black", size = 1)
plot_pic
# ggsave(here::here("figure_temp_stability_pic.svg"), plot_pic, height = 2.75, width = 3, dpi = 1000)
ggsave(here::here("figure_temp_stability.tif"),
cowplot::plot_grid(plot + theme(legend.position = "none"),
NULL, group_plot, NULL, plot_pic,
rel_widths = c(1, -0.3, 1, 0, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 10,
bg = "white", dpi = 1000)
temp_quantiles <- quantile(clim$GrowingSeasonTemp_mean, probs = c(.33, .67))
temp_quantile_low <- temp_quantiles[1]
temp_quantile_high <- temp_quantiles[2]
stability_temp_group <- stability_temp %>%
mutate(Group = case_when(GrowingSeasonTemp_mean <= temp_quantile_low ~ "Low33percent",
GrowingSeasonTemp_mean >= temp_quantile_high ~ "High33percent",
.default = NA)) %>%
filter(!is.na(Group))
stability_temp_group_all <- stability_temp %>%
mutate(Group = case_when(GrowingSeasonTemp_mean <= temp_quantile_low ~ "Low33percent",
GrowingSeasonTemp_mean >= temp_quantile_high ~ "High33percent",
.default = "Middle")) %>%
filter(!is.na(Group))
group_tukey <- rstatix::tukey_hsd(stability_temp_group_all %>%
mutate(TotalEnergyRelative = asinh(TotalEnergyRelative)),
TotalEnergyRelative ~ Group) %>%
rstatix::add_xy_position(fun = "max",
y.trans = function(x){sinh(x)}, # reverse asinh transformation
step.increase = 0.1) %>%
mutate(y.position = y.position + 0.5)
group_ttest <- rstatix::t_test(stability_temp_group %>%
mutate(TotalEnergyRelative = asinh(TotalEnergyRelative)),
TotalEnergyRelative ~ Group) %>%
rstatix::add_significance("p") %>%
rstatix::add_xy_position(fun = "max",
y.trans = function(x){sinh(x)}, # reverse asinh transformation
step.increase = 0.1) %>%
mutate(y.position = y.position + 0.5)
tree_all_sp <- ape::read.tree(here::here("combined_stability/dated_species_tree.tre"))
pgls_species <- intersect(stability_temp_group %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
tree <- tree_all_sp %>% ape::keep.tip(pgls_species)
group_pgls <- nlme::gls(TotalEnergyRelative ~ Group,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp_group %>%
filter(ShortName %in% pgls_species) %>%
select(ShortName, Group, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
group_plot <- stability_temp_group %>%
ggplot(aes(x = factor(Group,
levels = c("Low33percent", "Middle", "High33percent"),
labels = c("coolest 33%", "33-67", "warmest 33%")),
y = TotalEnergyRelative)) +
ggbeeswarm::geom_quasirandom(aes(fill = Genus, shape = Genus),
width = 0.25,
size = 0.5) +
stat_summary(geom = "pointrange",
position = position_nudge(x = 0.4),
size = 0.25,
linewidth = 0.4,
fatten = 2) +
scale_fill_manual(values = c("#fde725", "#35b779", "#31688e", "#440154")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
annotate("text",
label = "B", x = -Inf, y = Inf,
hjust = -0.5, vjust = 1.5,
size = 5,
fontface = "bold") +
ggpubr::stat_pvalue_manual(group_ttest,
hide.ns = TRUE,
tip.length = 0.01) +
labs(x = "Growing season temp. percentile",
y = bquote(Delta*Delta*italic("G")["fold"]~"(kcal"~mol^-1~large~subunit^-1*")")) +
theme(axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.text = element_text(face = "italic")) +
scale_y_continuous(limits = c(NA, 15), breaks = seq(-5, 15, 5)) +
cowplot::panel_border(color = "black", size = 0.5) +
coord_cartesian(clip = "off")
# geom_point()
group_plot
ggsave(here::here("figure_temp_stability.tif"),
cowplot::plot_grid(plot + theme(legend.position = "none"),
NULL, group_plot, NULL, plot_pic,
rel_widths = c(1, -0.3, 1, 0, 1),
align = "hv", axis = "tblr", nrow = 1),
height = 3, width = 10,
bg = "white", dpi = 1000)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(phytools)
here::i_am("combined_stability/combined_stability.Rmd")
ggplot2::theme_set(cowplot::theme_cowplot(line_size = 0.25, font_size = 10) +
theme(axis.ticks.length = unit(-3, "pt"),
axis.ticks = element_line(linewidth = 0.25),
strip.background = element_blank(),
strip.placement = "outside",
axis.line = element_blank(),
axis.text.x.top = element_blank(),
axis.text.y.right = element_blank(),
axis.title.x.top = element_blank(),
axis.title.y.right = element_blank()))
dryopteris_clim <- readr::read_csv(here::here("dryopteris_rubisco/gbif_data/bioclim_summary.csv"))
limonium_clim <- readr::read_csv(here::here("limonium_rubisco/gbif_data/bioclim_summary.csv"))
pinus_clim <- readr::read_csv(here::here("pine_rubisco/gbif_data/bioclim_summary.csv"))
viburnum_clim <- readr::read_csv(here::here("analyze/bioclim_summary.csv"))
clim <- bind_rows(dryopteris_clim, limonium_clim, pinus_clim, viburnum_clim) %>%
group_by(ShortName) %>%
summarise(across(.cols = !c("Species"),
.fns = mean),
Species = Species) %>%
mutate(ShortName = case_when(Species == "Viburnum sieboldii" ~ "sieboldii(2)",
Species == "Viburnum wrightii" ~ "wrightii(2)",
Species == "Pinus glabra" ~ "glabra(2)",
.default = ShortName))
clim %>%
mutate(Genus = stringr::word(Species, 1)) %>%
select(Genus, ShortName) %>%
readr::write_csv(here::here("combined_stability/combined_species_list.csv"))
species_seqs <- readr::read_csv(here::here("combined_stability/aa_sequences.csv"))
seq_nums <- readr::read_csv(here::here("combined_stability/seqs_in_order.txt"), col_names = FALSE) %>%
rename(seq = X1) %>%
mutate(SeqNum = row_number())
species_names <- full_join(species_seqs, seq_nums)
file_list <- list.files(here::here("foldx_species/runs"), pattern = "Dif_run")
runs <- readr::read_tsv(here::here("foldx_species/runs/Dif_run_1_8ruc-assembly-clean_Repair.fxout"), skip = 8) %>%
mutate(Run = 1 %>% as.numeric(),
# SeqNum = row_number(),
SeqNum = rep(1:(n()/3), each = 3),
.before = "Pdb") %>%
select(Run, SeqNum, Pdb, `total energy`)
run_num_seq_num <- c("1" = 0,
"2" = 22,
"3" = 44,
"4" = 66,
"5" = 88,
"6" = 110,
"7" = 132,
"8" = 153)
for (file in file_list) {
run_num <- file %>% stringr::str_extract("(?<=run_)[:digit:]+") %>% as.character
print(paste("Run", run_num))
if (run_num == "1") {next}
print(paste("Starting at sequence", run_num_seq_num[run_num]))
run_data <- readr::read_tsv(here::here("foldx_species", "runs", file), skip = 8) %>%
filter(stringr::str_detect(Pdb, "^8ruc")) %>%
mutate(Run = run_num  %>% as.numeric(),
# SeqNum = row_number() + run_num_seq_num[run_num],
SeqNum = rep(1:(n()/3), each = 3) + run_num_seq_num[run_num],
.before = "Pdb") %>%
select(Run, SeqNum, Pdb, `total energy`)
prev_seq_num <- run_data %>% pull(SeqNum) %>% max(., na.rm = TRUE)
runs <- bind_rows(runs, run_data)
}
runs_summary <- runs %>%
filter(!(SeqNum == 87 & Pdb == "8ruc-assembly-clean_Repair_2_0.pdb")) %>%
group_by(Run, SeqNum) %>%
summarise(across(.cols = !c(Pdb),
.fns = mean))
species_stability <- full_join(species_names, runs_summary) %>%
rename(ShortName = species)
stability_temp <- full_join(species_stability, clim) %>%
# filter(TotalEnergyRelative < 20) %>%
filter(!is.na(`total energy`)) %>%
filter(!is.na(MaxTempWarmestMonth_mean)) %>%
mutate(Genus = stringr::word(Species, 1),
TotalEnergyRelative = (`total energy`/8),
# TotalEnergyRelative = `total energy`-1845.87, # ddG + dGwt
.before = "total energy")
readr::write_csv(stability_temp, here::here("combined_stability/ddG_species.csv"))
temp_quantiles <- quantile(clim$GrowingSeasonTemp_mean, probs = c(.33, .67))
temp_quantile_low <- temp_quantiles[1]
temp_quantile_high <- temp_quantiles[2]
stability_temp_group <- stability_temp %>%
mutate(Group = case_when(GrowingSeasonTemp_mean <= temp_quantile_low ~ "Low33percent",
GrowingSeasonTemp_mean >= temp_quantile_high ~ "High33percent",
.default = NA)) %>%
filter(!is.na(Group))
stability_temp_group_all <- stability_temp %>%
mutate(Group = case_when(GrowingSeasonTemp_mean <= temp_quantile_low ~ "Low33percent",
GrowingSeasonTemp_mean >= temp_quantile_high ~ "High33percent",
.default = "Middle")) %>%
filter(!is.na(Group))
group_tukey <- rstatix::tukey_hsd(stability_temp_group_all %>%
mutate(TotalEnergyRelative = asinh(TotalEnergyRelative)),
TotalEnergyRelative ~ Group) %>%
rstatix::add_xy_position(fun = "max",
y.trans = function(x){sinh(x)}, # reverse asinh transformation
step.increase = 0.1) %>%
mutate(y.position = y.position + 0.5)
group_ttest <- rstatix::t_test(stability_temp_group %>%
mutate(TotalEnergyRelative = asinh(TotalEnergyRelative)),
TotalEnergyRelative ~ Group) %>%
rstatix::add_significance("p") %>%
rstatix::add_xy_position(fun = "max",
y.trans = function(x){sinh(x)}, # reverse asinh transformation
step.increase = 0.1) %>%
mutate(y.position = y.position + 0.5)
tree_all_sp <- ape::read.tree(here::here("combined_stability/dated_species_tree.tre"))
pgls_species <- intersect(stability_temp_group %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
tree <- tree_all_sp %>% ape::keep.tip(pgls_species)
group_pgls <- nlme::gls(TotalEnergyRelative ~ Group,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp_group %>%
filter(ShortName %in% pgls_species) %>%
select(ShortName, Group, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
group_pgls
anova(group_pgls)
pgls_species
tree
plot(tree)
group_pgls <- nlme::gls(TotalEnergyRelative ~ Group,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp_group %>%
filter(ShortName %in% pgls_species) %>%
select(ShortName, Group, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
group_pgls
summary(group_pgls)
?corBrownian
aic(group_pgls)
AIC(group_pgls)
stability_temp_group
group_pgls <- nlme::gls(TotalEnergyRelative ~ GrowingSeasonTemp_mean,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp_group %>%
filter(ShortName %in% pgls_species) %>%
select(ShortName, Group, GrowingSeasonTemp_mean) %>%
as.data.frame,
method = "ML")
group_pgls <- nlme::gls(TotalEnergyRelative ~ GrowingSeasonTemp_mean,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp_group %>%
filter(ShortName %in% pgls_species) %>%
select(ShortName, GrowingSeasonTemp_mean, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
summary(group_pgls)
?pgls_species
pgls_species
pgls_species <- intersect(stability_temp %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
length(pgls_species)
group_pgls <- nlme::gls(TotalEnergyRelative ~ GrowingSeasonTemp_mean,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp %>%
filter(ShortName %in% pgls_species) %>%
select(ShortName, GrowingSeasonTemp_mean, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
group_pgls <- nlme::gls(TotalEnergyRelative ~ GrowingSeasonTemp_mean,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp %>%
filter(ShortName %in% pic_species) %>%
select(ShortName, GrowingSeasonTemp_mean, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
NDENT CONTRASTS
# PHYLOGENETIC INDEPENDENT CONTRASTS
tree_all_sp <- ape::read.tree(here::here("combined_stability/dated_species_tree.tre"))
pic_species <- intersect(stability_temp %>%
filter(!is.na(TotalEnergyRelative) & !is.na(GrowingSeasonTemp_mean)) %>%
distinct(ShortName) %>%
pull(),
tree_all_sp$tip.label)
tree <- tree_all_sp %>% ape::keep.tip(pic_species)
group_pgls <- nlme::gls(TotalEnergyRelative ~ GrowingSeasonTemp_mean,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp %>%
filter(ShortName %in% pic_species) %>%
select(ShortName, GrowingSeasonTemp_mean, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
group_pgls
summary(group_pgls)
stability_temp_pgls <- nlme::gls(TotalEnergyRelative ~ GrowingSeasonTemp_mean,
correlation = ape::corBrownian(1, phy = tree, form = ~ ShortName),
data = stability_temp %>%
filter(ShortName %in% pic_species) %>%
select(ShortName, GrowingSeasonTemp_mean, TotalEnergyRelative) %>%
as.data.frame,
method = "ML")
stability_temp_pgls
?ape::pic
group_ttest
?asinh
.fns = ~ mean(.))
stability_temp_group %>%
group_by(Group) %>%
summarise(across(.cols = "TotalEnergyRelative",
.fns = ~ mean(.)))
means <- stability_temp_group %>%
group_by(Group) %>%
summarise(across(.cols = "TotalEnergyRelative",
.fns = ~ mean(.)))
means
6.85-5.93
stability_temp_labels %>%
group_by(Genus) %>%
summarise(n = n())
stability_temp_labels <- stability_temp %>%
mutate(FacetLabel = case_when(Genus == "Dryopteris" ~ "A",
Genus == "Limonium" ~ "B",
Genus == "Pinus" ~ "C",
Genus == "Viburnum" ~ "D"))
stability_temp_labels %>%
group_by(Genus) %>%
summarise(n = n())
stability_temp_labels %>%
group_by(Genus) %>%
summarise(n = n())
